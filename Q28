import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# Load the customer data (replace 'customer_data.csv' with your actual dataset file)
data = pd.read_csv('customer_data.csv')

# Assume the dataset has relevant features for clustering (e.g., 'spending_score', 'annual_income')
X = data[['spending_score', 'annual_income']]  # Features for clustering

# Standardize the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Fit K-Means with a predefined number of clusters (replace k with the desired number)
k = 3  # Example: change this based on your analysis
kmeans = KMeans(n_clusters=k, random_state=42)
kmeans.fit(X_scaled)

# Input new customer features
spending_score = float(input("Enter the spending score of the customer: "))
annual_income = float(input("Enter the annual income of the customer: "))

# Create an array for the new customer
new_customer = np.array([[spending_score, annual_income]])

# Standardize the new customer's features
new_customer_scaled = scaler.transform(new_customer)

# Predict the segment for the new customer
predicted_segment = kmeans.predict(new_customer_scaled)

# Output the predicted segment
print(f"The new customer is assigned to segment: {predicted_segment[0]}")



