import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

# Load the customer churn dataset (replace 'customer_data.csv' with your actual dataset file)
data = pd.read_csv('customer_data.csv')

# Assume the dataset has columns like 'usage_minutes', 'contract_duration', and 'churn'
# Replace these with your actual feature names
X = data[['usage_minutes', 'contract_duration']]  # Features (input variables)
y = data['churn']  # Target variable (0 for not churned, 1 for churned)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Logistic Regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Input new customer features
usage_minutes = float(input("Enter the usage minutes: "))
contract_duration = float(input("Enter the contract duration (in months): "))

# Create an array for the new customer
new_customer = np.array([[usage_minutes, contract_duration]])

# Predict churn for the new customer
predicted_churn = model.predict(new_customer)

# Output the prediction
if predicted_churn[0] == 1:
    print("The customer is predicted to churn.")
else:
    print("The customer is predicted not to churn.")





